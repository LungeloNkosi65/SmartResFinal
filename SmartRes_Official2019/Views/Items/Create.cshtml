@model SmartRes_Official2019Data.Item

@{
    ViewBag.Title = "Add Item";
    Layout = "~/Views/Shared/_Layout.cshtml";

}


<div class="col-md-10">
    <div class="card">
        <div class="card-heading border bottom">
            <h4 class="card-title">Add Meal</h4>
        </div>
        <div class="card-block">
            <div class="mrg-top-40">
                @using (Html.BeginForm(actionName: "Create", controllerName: "Items", routeValues: null, method: FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="kt-portlet__body">
                        <div class="form-group row">
                            <div class="col-lg-6">
                                <label> Name:</label>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-lg-6">
                                <label class="">Category:</label>
                                @Html.DropDownList("Department_ID", null, "--- Please Select ---", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Department_ID, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-lg-6">
                                <label>Description:</label>
                                <div class="kt-input-icon">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Description" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    <span class="kt-input-icon__icon kt-input-icon__icon--right"><span><i class="la la-map-marker"></i></span></span>
                                </div>

                            </div>
                            <div class="col-lg-6">
                                <label>Quantiy In Stock:</label>
                                <div class="kt-input-icon">
                                    @Html.EditorFor(model => model.QuantityInStock, new { htmlAttributes = new { @class = "form-control", @placeholder = "Quantity In Stock" } })
                                    @Html.ValidationMessageFor(model => model.QuantityInStock, "", new { @class = "text-danger" })
                                    <span class="kt-input-icon__icon kt-input-icon__icon--right"><span><i class="la la-map-marker"></i></span></span>
                                </div>

                            </div>
                            <div class="col-lg-6">
                                <label class="">Sale Price:</label>

                                <div class="input-group-addon">
                                    <b>R</b>
                                </div>

                                <div class="kt-input-icon">
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @placeholder = "0.00" } })
                                    <span class="kt-input-icon__icon kt-input-icon__icon--right"><span><i class="la la-bookmark-o"></i></span></span>
                                </div>

                            </div>
                            <div class="col-lg-6">
                                <label class="">Cost Price:</label>

                                <div class="input-group-addon">
                                    <b>R</b>
                                </div>

                                <div class="kt-input-icon">
                                    @Html.EditorFor(model => model.CostPrice, new { htmlAttributes = new { @class = "form-control", @placeholder = "0.00" } })
                                    <span class="kt-input-icon__icon kt-input-icon__icon--right"><span><i class="la la-bookmark-o"></i></span></span>
                                </div>

                            </div>
                        </div>





                        <tr>
                            <th>@Html.LabelFor(model => model.Picture)</th>
                            <td>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-file-picture-o"></i>
                                    </div>
                                    <input type="file" name="img_upload" accept=".jpeg,.jpg,.png" onchange="readURL(this);" class="form-control" required="required" />
                                </div>
                            </td>
                        </tr>
                        



                        <div class="col-md-4">
                            <img id="image_preview" src="#" alt="" @*style="border: 5px solid #ccc"*@ />
                        </div>


                        <div class="kt-portlet__foot">
                            <div class="kt-form__actions">
                                <div class="row">
                                    <div class="col-lg-6">
                                        <button type="submit" class="btn btn-primary">Save</button>
                                        <button type="reset" class="btn btn-secondary">Cancel</button>
                                    </div>

                                </div>
                            </div>
                        </div>









                    </div>

                }
            </div>
            </div>
        </div>
    </div>

            <script type="text/javascript">
                //image preview
                function readURL(input) {
                    if (input.files && input.files[0]) {
                        var reader = new FileReader();

                        reader.onload = function (e) {
                            $('#image_preview')
                                .attr('src', e.target.result)
                                .width(300)
                                .height(300);

                        };

                        reader.readAsDataURL(input.files[0]);
                    }
                }
            </script>


